name: FOSS Check

on:
  push:
    branches:
      - IAV-FF-feature-foss-check-integration-192

jobs:
  foss-check:
    runs-on: ubuntu-latest

    steps:
      ### Step 1: Checkout Repository
      - name: Checkout Code
        uses: actions/checkout@v4

      ### Step 2: Set up Node.js
      - name: Set up Node.js Environment
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      ### Step 3: Install Dependencies
      - name: Install Dependencies (Root-Level)
        run: npm install
        run: sudo apt-get install jq -y

      ### Step 4: Generate Individual SBOMs for Each Turbo Workspace
      - name: Generate SBOMs for Workspaces
        run: |
          # Loop through each workspace and generate its SBOM
          find packages -name "package.json" -not -path "*/node_modules/*" | while read packageFile; do
            packageDir=$(dirname "$packageFile")
            echo "Generating SBOM for: $packageDir"
            cd "$packageDir" && npm sbom --sbom-format spdx --output SBOM-$packageDir.spdx && cd -
          done
        env:
          NODE_OPTIONS: '--max_old_space_size=4096'

      ### Step 5: Run NPM Audit for Vulnerabilities (All Workspaces)
      - name: Security Vulnerability Checks
        run: |
          find packages -name "package.json" -not -path "*/node_modules/*" | while read packageFile; do
            packageDir=$(dirname "$packageFile")
            echo "Running npm audit for: $packageDir"
            cd "$packageDir" && npm install && npm audit --audit-level=high && cd -
          done

      ### Step 6: Validate Licenses in package-lock.json
      - name: Dependency License Compliance Check
        run: |
          # Define disallowed licenses
          DISALLOWED_LICENSES="GPL,AGPL-3.0,CC-BY-4.0"

          echo "Checking licenses in the root package-lock.json file..."
          
          # Parse package-lock.json and validate licenses
          jq -r '.dependencies | to_entries[] | "\(.key):\(.value.license)"' package-lock.json | while read dependency; do
            for license in $(echo $DISALLOWED_LICENSES | sed 's/,/ /g'); do
              if echo "$dependency" | grep -q "$license"; then
                echo "❌ Disallowed license detected: $dependency"
                exit 1
              fi
            done
          done

          echo "✅ All dependency licenses validated successfully."

      ### Step 7: Check Root Project License with Licensee
      - name: Project License Compliance with Licensee
        run: |
          # Install Licensee gem locally
          gem install licensee --user-install

          # Add gem's executables directory to PATH
          export PATH="$HOME/.local/share/gem/ruby/3.2.0/bin:$PATH"

          # Run Licensee to validate the main project's license
          licensee detect . --json > license-compliance-report.json

          # Output the license report
          cat license-compliance-report.json

      ### Step 8: Notify on Failure (Notifications Placeholder)
      - name: Failure Notifications
        if: failure() # Run this step only if the pipeline fails
        run: |
          echo "FOSS checks failed! Sending notifications..."
          # Here we would integrate an email notification system.

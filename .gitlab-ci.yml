default:
  image: node:latest
  before_script:
    - chmod -R +x ./scripts/ci_cd/
    - source ./scripts/ci_cd/configure_npm.sh
    - source ./scripts/ci_cd/set_package_env_variables.sh

stages:
  - validate
  - prepare_and_build
  - publish
  - release

# Validate that the package name is properly scoped to the project's root namespace.
# For more information, see https://docs.gitlab.com/ee/user/packages/npm_registry/#package-naming-convention
validate_package_scope:
  stage: validate
  script:
    - |
      if [[ ! -f package.json ]]; then
        echo "No package.json found! A package.json file is required to publish a package to GitLab's NPM registry."
        echo 'For more information, see https://docs.gitlab.com/ee/user/packages/npm_registry/#creating-a-project'
        exit 1
      fi
    - |
      if [[ ! $NPM_PACKAGE_NAME =~ ^@$CI_PROJECT_ROOT_NAMESPACE/ ]]; then
        echo "Invalid package scope! Packages must be scoped in the root namespace of the project, e.g. \"@${CI_PROJECT_ROOT_NAMESPACE}/${CI_PROJECT_NAME}\""
        echo 'For more information, see https://docs.gitlab.com/ee/user/packages/npm_registry/#package-naming-convention'
        exit 1
      fi

# If no .npmrc if included in the repo, generate a temporary one to use during the publish step
# that is configured to publish to GitLab's NPM registry
create_npmrc:
  stage: validate
  script:
    - |
      if [[ ! -f .npmrc ]]; then
        echo 'No .npmrc found! Creating one now. Please review the following link for more information: https://docs.gitlab.com/ee/user/packages/npm_registry/index.html#authenticating-with-a-ci-job-token'
        {
          echo "@${CI_PROJECT_ROOT_NAMESPACE}:registry=${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/npm/"
          echo "//gitlab.iavgroup.local/api/v4/projects/8537/packages/npm/:_authToken=${CI_JOB_TOKEN}"
        } >> .npmrc
      fi
  artifacts:
    paths:
      - .npmrc

# Builds the framework
prepare_and_build_package:
  stage: prepare_and_build
  script:
    - npm install --only=dev
    - npm run build-linux
  artifacts:
    paths:
      - ./node_modules
      - ./build

# Publish the package. If the version in package.json has not yet been published, it will be
# published to GitLab's NPM registry. If the version already exists, the publish command
# will fail and the existing package will not be updated.
publish_package:
  stage: publish
  variables:
    SSL_CERT_FILE: ${IAV_CA_BUNDLE}
  script:
    - npm config set cafile $IAV_CA_BUNDLE
    - |
      {
        npm publish ./build
        echo "Successfully published version ${NPM_PACKAGE_VERSION} of ${NPM_PACKAGE_NAME} to GitLab's NPM registry: ${CI_PROJECT_URL}/-/packages"
      } || {
        echo "No new version of ${NPM_PACKAGE_NAME} published. This is most likely because version ${NPM_PACKAGE_VERSION} already exists in GitLab's NPM registry."
        exit 1
      }
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop"'

# Create release so observer of this project will get a notification e-mail.
create_release:
  stage: release
  variables:
    SSL_CERT_FILE: ${IAV_CA_BUNDLE}
  image: registry.gitlab.com/gitlab-org/release-cli:v0.6.0
  script:
    - apk add --update npm
  release:
    tag_name: ver_$(node -p "require('./package.json').version")
    description: ./scripts/ci_cd/release_notes/$(node -p "require('./package.json').version").md
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop"'
